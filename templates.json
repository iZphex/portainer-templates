{
    "version": "2",
    "templates": [
      {
        "categories": [
          "Other"
        ],
        "description": "AdGuard Home is a network-wide software for blocking ads & tracking. After you set it up, it\u2019ll cover ALL your home devices, and you don\u2019t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "CONTEXT_PATH",
            "name": "CONTEXT_PATH",
            "set": "adguard home"
          }
        ],
        "image": "adguard/adguardhome:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/adguard.png",
        "name": "adguard",
        "platform": "linux",
        "ports": [
          "53:53/tcp",
          "53:53/udp",
          "67:67/udp",
          "68:68/tcp",
          "68:68/udp",
          "80:80/tcp",
          "443:443/tcp",
          "853:853/tcp",
          "3000:3000/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Adguard",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Adguard/Workdir",
            "container": "/opt/adguardhome/work"
          },
          {
            "bind": "/portainer/Files/AppData/Adguard/Conf",
            "container": "/opt/adguardhome/conf"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools",
          "Authentication"
        ],
        "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
        "env": [
          {
            "label": "TZ",
            "name": "TZ"
          }
        ],
        "image": "authelia/authelia:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/authelia.png",
        "name": "authelia",
        "note": "Requires a configuration.yml file in order to work. Documentation is available <a href='https://docs.authelia.com/deployment/deployment-ha'>here</a>.",
        "platform": "linux",
        "ports": [
          "9091:9091/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Authelia",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Authelia",
            "container": "/etc/authelia/"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.",
        "image": "vaultwarden/server:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/bitwarden.png",
        "name": "vaultwarden",
        "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
        "platform": "linux",
        "ports": [
          ":80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Vaultwarden",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Vaultwarden",
            "container": "/data"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "ave recipes in seconds with plain text formatting and create beatiful recipe pages with automated ease.",
        "image": "gregyankovoy/chowdown:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/chowdown.png",
        "name": "Chowdown",
        "platform": "linux",
        "ports": [
          "4000:4000/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Chowdown",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Chowdown",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Code-server is VS Code running on a remote server, accessible through the browser.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PUID",
            "name": "GUID"
          },
          {
            "label": "TZ",
            "name": "TZ"
          },
          {
            "label": "PASSWORD",
            "name": "PASSWORD"
          },
          {
            "label": "SUDO_PASSWORD",
            "name": "SUDO_PASSWORD"
          },
          {
            "default": "example.my.domain",
            "label": "PROXY_DOMAIN",
            "name": "PROXY_DOMAIN"
          }
        ],
        "image": "linuxserver/code-server:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/code-server.png",
        "name": "code-server",
        "platform": "linux",
        "ports": [
          "8443:8443/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Code Server",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Code-Server",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Downloaders",
          "Video"
        ],
        "description": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/couchpotato:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/couchpotato-icon.png",
        "name": "couchpotato",
        "platform": "linux",
        "ports": [
          "5050:5050/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "CouchPotato",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Couchpotato",
            "container": "/config"
          },
          {
            "bind": "/portainer/Downloads",
            "container": "/downloads"
          },
          {
            "bind": "/portainer/Movies",
            "container": "/movies"
          }
        ]
      },
      {
        "categories": [
          "Downloaders"
        ],
        "description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "UMASK_SET",
            "name": "UMASK_SET",
            "set": "000"
          }
        ],
        "image": "linuxserver/deluge:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/deluge-icon.png",
        "name": "deluge",
        "platform": "linux",
        "restart_policy": "unless-stopped",
        "title": "Deluge",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Deluge",
            "container": "/config"
          },
          {
            "bind": "/portainer/Downloads",
            "container": "/downloads"
          }
        ],
        "ports": [
          "8112:8112/tcp",
          "6881:6881/tcp",
          "6881:6881/udp"
        ]
      },
      {
        "categories": [
          "Backup",
          "Cloud",
          "Other",
          "Productivity",
          "Tools"
        ],
        "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/duplicati:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/duplicati-icon.png",
        "name": "duplicati",
        "platform": "linux",
        "ports": [
          "8200:8200/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Duplicati",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Duplicati",
            "container": "/config"
          },
          {
            "container": "/tmp"
          },
          {
            "container": "/backups"
          },
          {
            "container": "/source"
          }
        ]
      },
      {
        "categories": [
          "Web",
          "Tools"
        ],
        "description": "Git with a cup of tea! Painless self-hosted all-in-one software development service, including Git hosting, code review, team collaboration, package registry and CI/CD.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "gitea/gitea:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/gitea.png",
        "name": "gitea",
        "note": "Use SQLite3 for the database unless you have an external one setup.",
        "ports": [
          "3000:3000/tcp",
          "222:22/tcp"
        ],
        "platform": "linux",
        "restart_policy": "unless-stopped",
        "title": "Gitea",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Gitea",
            "container": "/data"
          },
          {
            "bind": " /etc/timezone",
            "container": "/etc/timezone:ro"
          },
          {
            "bind": "/etc/localtime",
            "container": "/etc/localtime:ro"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "A clientless remote desktop gateway.",
        "image": "oznu/guacamole:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/guacamole.png",
        "name": "guacamole",
        "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
        "platform": "linux",
        "ports": [
          "8080:8080/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Guacamole",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Guacamole",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Tools",
          "Web",
          "Other"
        ],
        "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/heimdall:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/heimdall-icon.png",
        "name": "heimdall",
        "platform": "linux",
        "ports": [
          "80/tcp",
          "443/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Heimdall",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Heimdall",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Video",
          "Music",
          "Photos"
        ],
        "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "TZ",
            "name": "TZ"
          }
        ],
        "image": "linuxserver/jellyfin:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/jellyfin.png",
        "name": "jellyfin",
        "platform": "linux",
        "ports": [
          "8096:8096/tcp",
          "8920:8920/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Jellyfin",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Jellyfin",
            "container": "/config"
          },
          {
            "bind": "/portainer/TV",
            "container": "/data/tvshows"
          },
          {
            "bind": "/portainer/Movies",
            "container": "/data/movies"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Jellyseer is a free and open source software application for managing requests for your media library.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "fallenbagel/jellyseerr:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/jellyseerr.png",
        "name": "Jellyseerr",
        "platform": "linux",
        "ports": [
          "5055:5055/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Jellyseerr",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Jellyseerr",
            "container": "/app/config"
          }
        ]
      },
      {
        "categories": [
          "Video"
        ],
        "description": "Headless installation of Kodi\u2122 (formerly known as XBMC\u2122), to enable library updates.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/kodi-headless:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/kodi-icon.png",
        "name": "kodi-headless",
        "platform": "linux",
        "ports": [
          "8080/tcp",
          "9777/udp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Kodi Headless",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Kodi",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Books"
        ],
        "description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/lazylibrarian:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/lazylibrarian-icon.png",
        "name": "lazylibrarian",
        "platform": "linux",
        "ports": [
          "5299:5299/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "LazyLibrarian",
        "type": 1,
        "volumes": [
          {
            "container": "/config"
          },
          {
            "container": "/downloads"
          },
          {
            "container": "/books"
          }
        ]
      },
      {
        "categories": [
          "Downloaders",
          "Music"
        ],
        "description": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "hotio/lidarr:release",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/lidarr.png",
        "name": "lidarr",
        "platform": "linux",
        "ports": [
          "8686:8686/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Lidarr",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Lidarr",
            "container": "/config"
          },
          {
            "bind": "/portainer/Downloads",
            "container": "/downloads"
          },
          {
            "bind": "/portainer/Music",
            "container": "/music"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "An Enhanced drop in replacement for Mysql.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "MYSQL_ROOT_PASSWORD",
            "name": "MYSQL_ROOT_PASSWORD",
            "set": ""
          }
        ],
        "image": "linuxserver/mariadb:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/mariadb-icon.png",
        "name": "mariadb",
        "platform": "linux",
        "ports": [
          "3306:3306/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "MariaDB",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Mariadb",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Other"
        ],
        "description": "McMyAdmin 2 is the leading web control panel and administration console for Minecraft servers.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/mcmyadmin2:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/mcmyadmin-icon.png",
        "name": "mcmyadmin2",
        "platform": "linux",
        "ports": [
          "8080:8080/tcp",
          "25565:25565/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "McMyAdmin 2",
        "type": 1,
        "volumes": [
          {
            "container": "/minecraft"
          }
        ]
      },
      {
        "categories": [
          "Downloaders",
          "Video"
        ],
        "description": "Medusa, automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/medusa:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/medusa-icon.png",
        "name": "medusa",
        "platform": "linux",
        "ports": [
          "8081:8081/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Medusa",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Medusa",
            "container": "/config"
          },
          {
            "bind": "/portainer/TV",
            "container": "/tv"
          },
          {
            "bind": "/portainer/Downloads",
            "container": "/downloads"
          }
        ]
      },
      {
        "categories": [
          "Cloud",
          "Productivity",
          "Tools",
          "Other",
          "Web"
        ],
        "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "TZ",
            "name": "TZ"
          },
          {
            "label": "DATABASE_PASSWORD",
            "name": "DATABASE_PASSWORD"
          },
          {
            "label": "MYSQL_ROOT_PASSWORD",
            "name": "MYSQL_ROOT_PASSWORD"
          },
          {
            "label": "PORT",
            "name": "PORT"
          }
        ],
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/nextcloud-icon.png",
        "name": "nextcloud",
        "note": "The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
        "platform": "linux",
        "repository": {
          "stackfile": "Template/Stack/nextcloud.yml",
          "url": "https://github.com/Qballjos/portainer_templates"
        },
        "title": "Nextcloud",
        "type": 3
      },
      {
        "categories": [
          "Web",
          "Proxy"
        ],
        "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/nginx:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/nginx-icon.png",
        "name": "nginx",
        "platform": "linux",
        "ports": [
          "80/tcp",
          "443/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Nginx",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Nginx",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Proxy",
          "Tools"
        ],
        "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
        "image": "jc21/nginx-proxy-manager",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/proxy_mgr.png",
        "name": "nginx-proxy-manager",
        "platform": "linux",
        "env": [
          {
            "label": "DB_SQLITE_FILE",
            "name": "DB_SQLITE_FILE",
            "default": "/data/database.sqlite"
          }
        ],
        "ports": [
          "80:80/tcp",
          "81:81/tcp",
          "443:443/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Nginx Proxy Manager",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/data",
            "container": "/data"
          },
          {
            "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/letsencrypt",
            "container": "/etc/letsencrypt"
          }
        ]
      },
      {
        "categories": [
          "Downloaders",
          "Other",
          "Video",
          "Tools"
        ],
        "description": "Ombi allows you to host your own Plex Request and user management system.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/ombi:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/ombi.png",
        "name": "ombi",
        "platform": "linux",
        "ports": [
          "3579:3579/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Ombi",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Ombi",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Other"
        ],
        "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
        "env": [
          {
            "label": "INTERFACE",
            "name": "INTERFACE",
            "set": "eth0"
          },
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/openvpn-as:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/openvpn-as-icon.png",
        "name": "openvpn-as",
        "platform": "linux",
        "ports": [
          "943:943/tcp",
          "9443:9443/tcp",
          "1194:1194/udp"
        ],
        "restart_policy": "unless-stopped",
        "title": "OpenVPN Access Server",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "organizr/organizr:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/organizr-icon.png",
        "name": "organizr-v2",
        "platform": "linux",
        "ports": [
          "80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Organizr",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Organizr",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Overseerr is a free and open source software application for managing requests for your media library.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "hotio/overseerr:release",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/overseerr-icon.png",
        "name": "Overseerr",
        "platform": "linux",
        "ports": [
          "5055:5055/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Overseerr",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Overseerr",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Cloud",
          "Productivity",
          "Tools",
          "Other",
          "Web"
        ],
        "description": "ownCloud is a self-hosted file sync and share server. It provides access to your data through a web interface, sync clients or WebDAV while providing a platform to view, sync and share across devices easily\u2014all under your control. ownCloud\u2019s open architecture is extensible via a simple but powerful API for applications and plugins and it works with any storage.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "TZ",
            "name": "TZ"
          },
          {
            "label": "OWNCLOUD_DOMAIN",
            "name": "OWNCLOUD_DOMAIN"
          },
          {
            "label": "DB_PASSWORD",
            "name": "DB_PASSWORD"
          },
          {
            "label": "ADMIN_USERNAME",
            "name": "ADMIN_USERNAME"
          },
          {
            "label": "ADMIN_PASSWORD",
            "name": "ADMIN_PASSWORD"
          },
          {
            "label": "PORT",
            "name": "PORT"
          }
        ],
        "logo": "https://raw.githubusercontent.com/docker-library/docs/9d36b4ed7cabc35dbd3849272ba2bd7abe482172/owncloud/logo.png",
        "name": "Owncloud",
        "note": "The database user is owncloud and the database is owncloud.",
        "platform": "linux",
        "repository": {
          "stackfile": "Template/Stack/owncloud.yml",
          "url": "https://github.com/Qballjos/portainer_templates"
        },
        "title": "Owncloud",
        "type": 3
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Passky is a simple, modern, lightweight, open-source and secure password manager.",
        "image": "rabbitcompany/passky-client:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/passky-icon.png",
        "name": "passky-client",
        "platform": "linux",
        "ports": [
          "8081:80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Passky Client",
        "type": 1
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Passky is a simple, modern, lightweight, open-source and secure password manager.",
        "env": [
          {
            "default": "admin",
            "label": "ADMIN_USERNAME",
            "name": "ADMIN_USERNAME"
          },
          {
            "label": "ADMIN_PASSWORD",
            "name": "ADMIN_PASSWORD"
          }
        ],
        "image": "rabbitcompany/passky-server:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/passky-icon.png",
        "name": "passky-server",
        "note": "Do not forget to perform regular backups, especially before each update.",
        "platform": "linux",
        "ports": [
          "8080:80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Passky Server",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Passky-Server",
            "container": "/var/www/html/databases"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Petio is a third party companion app available to Plex server owners to allow their users to request, review and discover content.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "TZ",
            "name": "TZ"
          },
          {
            "label": "PORT",
            "name": "PORT"
          }
        ],
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/petio-icon.png",
        "name": "Petio",
        "platform": "linux",
        "repository": {
          "stackfile": "Template/Stack/petio.yml",
          "url": "https://github.com/Qballjos/portainer_templates"
        },
        "title": "Petio",
        "type": 3
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
        "image": "pihole/pihole:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/pihole.png",
        "name": "pihole",
        "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
        "platform": "linux",
        "ports": [
          "53:53/tcp",
          "53:53/udp",
          "67:67/udp",
          "1010:80/tcp",
          "4443:443/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Pi-Hole",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/PiHole",
            "container": "/etc/pihole"
          },
          {
            "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
            "container": "/etc/dnsmasq.d"
          }
        ]
      },
      {
        "categories": [
          "Video",
          "Music",
          "Photos"
        ],
        "description": "Your favorite movies, TV, music, web shows, podcasts, and more, all streamed to your favorite screens.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "VERSION",
            "name": "VERSION",
            "set": "latest"
          }
        ],
        "image": "linuxserver/plex:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/plex-icon.png",
        "name": "plex",
        "network": "host",
        "platform": "linux",
        "restart_policy": "unless-stopped",
        "title": "Plex",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Plex",
            "container": "/config"
          },
          {
            "bind": "/portainer/TV",
            "container": "/tv"
          },
          {
            "bind": "/portainer/Movies",
            "container": "/movies"
          }
        ]
      },
      {
        "categories": [
          "Downloaders",
          "Other",
          "Video",
          "Tools"
        ],
        "description": "Simple automated way for users to request new content for Plex.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "URL_BASE",
            "name": "URL_BASE",
            "set": ""
          }
        ],
        "image": "linuxserver/plexrequests:latest",
        "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
        "name": "plexrequests",
        "platform": "linux",
        "ports": [
          "3000:3000/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Plex Requests",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/PlexRequests",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Downloaders",
          "Video"
        ],
        "description": "Prowlarr is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "ghcr.io/linuxserver/prowlarr:develop",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/prowlarr.png",
        "name": "prowlarr",
        "platform": "linux",
        "ports": [
          "9696:9696/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Prowlarr",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Prowlarr",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Downloaders"
        ],
        "description": "The qBittorrent project aims to provide an open-source software alternative to \u00b5Torrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/qbittorrent:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/qbittorrent-icon.png",
        "name": "qbittorrent",
        "platform": "linux",
        "ports": [
          "6881:6881/tcp",
          "6881:6881/udp",
          "8080:8080/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "qBittorrent",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/qBittorrent",
            "container": "/config"
          },
          {
            "bind": "/portainer/Downloads",
            "container": "/downloads"
          }
        ]
      },
      {
        "categories": [
          "Downloaders",
          "Video"
        ],
        "description": "Radarr - A fork of Sonarr to work with movies \u00e0 la Couchpotato.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "hotio/radarr:release",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/radarr.png",
        "name": "radarr",
        "platform": "linux",
        "ports": [
          "7878:7878/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Radarr",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Radarr",
            "container": "/config"
          },
          {
            "bind": "/portainer/Downloads",
            "container": "/downloads"
          },
          {
            "bind": "/portainer/Movies",
            "container": "/movies"
          }
        ]
      },
      {
        "categories": [
          "Backup",
          "Cloud",
          "Other",
          "Tools"
        ],
        "description": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/resilio-sync:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/resilio.png",
        "name": "resilio-sync",
        "platform": "linux",
        "restart_policy": "unless-stopped",
        "title": "Resilio Sync",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Resilio-Sync",
            "container": "/config"
          },
          {
            "container": "/sync"
          },
          {
            "bind": "/portainer/Downloads",
            "container": "/downloads"
          }
        ]
      },
      {
        "categories": [
          "Downloaders"
        ],
        "description": "Popular torrent client with a webui for ease of use.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/rutorrent:latest",
        "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
        "name": "rutorrent",
        "platform": "linux",
        "ports": [
          "80/tcp",
          "51413:51413/tcp",
          "6881:6881/udp"
        ],
        "restart_policy": "unless-stopped",
        "title": "ruTorrent",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/ruTorrent",
            "container": "/config"
          },
          {
            "bind": "/portainer/Downloads",
            "container": "/downloads"
          }
        ]
      },
      {
        "categories": [
          "Downloaders",
          "Video"
        ],
        "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "hotio/sonarr:release",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/sonarr-icon.png",
        "name": "sonarr",
        "platform": "linux",
        "ports": [
          "8989:8989/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Sonarr",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Sonarr",
            "container": "/config"
          },
          {
            "bind": "/dev/rtc",
            "container": "/dev/rtc"
          },
          {
            "bind": "/portainer/TV",
            "container": "/tv"
          },
          {
            "bind": "/portainer/Downloads",
            "container": "/downloads"
          }
        ]
      },
      {
        "categories": [
          "Backup",
          "Cloud",
          "Other",
          "Tools"
        ],
        "description": "Syncthing is a continuous file synchronization program. It synchronizes files between two or more computers in real time, safely protected from prying eyes.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/syncthing:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/syncthing-icon.png",
        "name": "syncthing",
        "platform": "linux",
        "ports": [
          "8384:8384/tcp",
          "21027:21027/udp",
          "22000:22000/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "SyncThing",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Syncthing",
            "container": "/config"
          },
          {
            "container": "/sync"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Tautulli is a 3rd party application that you can run along side your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/tautulli:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/tautulli-icon.png",
        "name": "tautulli",
        "note": "<b>Port 8181</b> The webui for Tautulli's webui<br/></br>Configuration <ul><li><b>/config</b> - Storing Configuration and the Tautulli database</li><li><b>/logs</b> - Map to you plex logs (required for IP logging)</li></ul>",
        "platform": "linux",
        "ports": [
          "8181:8181/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Tautulli",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Logs",
            "container": "/logs"
          },
          {
            "bind": "/portainer/Files/AppData/Config/Tautulli",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Tools",
          "Other"
        ],
        "description": "A simple script that will watch a stream for you and earn the channel points.",
        "image": "rdavidoff/twitch-channel-points-miner-v2:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/twitchpointsminer.png",
        "name": "twitch-points-miner",
        "note": "Requires run.py, this is your starter script with your configuration. Please copy and modify accordingly <a href='https://github.com/rdavydov/Twitch-Channel-Points-Miner-v2/tree/master?tab=readme-ov-file#how-to-use'/>Here</a>",
        "platform": "linux",
        "ports": [
          "5000:5000/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Twitch Points Miner",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/TwitchPointsMiner/run.py",
            "container": "/usr/src/app/run.py"
          },
          {
            "bind": "/portainer/Files/AppData/TwitchPointsMiner/cookies",
            "container": "/usr/src/app/cookies"
          },
          {
            "bind": "/portainer/Files/AppData/TwitchPointsMiner/logs",
            "container": "/usr/src/app/logs"
          },
          {
            "bind": "/portainer/Files/AppData/TwitchPointsMiner/analytics",
            "container": "/usr/src/app/analytics"
          }
        ]
      },
      {
        "categories": [
          "Taskserver"
        ],
        "description": "It is a self-hosted monitoring tool like Uptime Robot",
        "image": "louislam/uptime-kuma:latest",
        "logo": "https://images.opencollective.com/uptime-kuma/29c5113/logo/256.png",
        "name": "uptime-kuma",
        "platform": "linux",
        "ports": [
          "3001:3001/tcp"
        ],
        "restart_policy": "always",
        "title": "Uptime Kuma",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/UptimeKuma",
            "container": "/app/data"
          }
        ]
      },
      {
        "categories": [
          "Management",
          "Tools"
        ],
        "description": "The Unifi-controller Controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "100",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "linuxserver/unifi-controller:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/unifi-icon.png",
        "name": "unifi-controller",
        "platform": "linux",
        "ports": [
          "3478:3478/udp",
          "10001:10001/udp",
          "8080:8080/tcp",
          "8081:8081/tcp",
          "8443:8443/tcp",
          "8843:8843/tcp",
          "8880:8880/tcp",
          "6789:6789/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "UniFi Controller",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Unifi",
            "container": "/config"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools",
          "Maintenance"
        ],
        "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
        "image": "containrrr/watchtower:latest",
        "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/watchtower.png",
        "name": "watchtower",
        "note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
        "platform": "linux",
        "restart_policy": "unless-stopped",
        "title": "Watchtower",
        "type": 1,
        "volumes": [
          {
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
          }
        ]
      },
      {
        "type": 1,
        "title": "Watchtower {shmolf}",
        "name": "watchtower",
        "categories": [
          "Docker"
        ],
        "description": "A container-based solution for automating Docker container base image updates",
        "note": "<a target='_blank' href='https://containrrr.dev/watchtower/'>Application documentation \ud83d\uddd7</a>",
        "logo": "https://raw.githubusercontent.com/shmolf/portainer-templates/main/assets/logos/watchtower-logo.png",
        "platform": "linux",
        "image": "containrrr/watchtower",
        "ports": [
          "9001/tcp"
        ],
        "restart_policy": "always",
        "volumes": [
          {
            "container": "/var/run/docker.sock",
            "bind": "/var/run/docker.sock"
          }
        ]
      },
      {
        "type": 1,
        "title": "Terraria Server {shmolf}",
        "name": "terraria-server",
        "categories": [
          "Games"
        ],
        "description": "Docker container for a Terraria dedicated server.",
        "note": "Link to <a target='_blank' href='https://terraria.fandom.com/wiki/Guide:Setting_up_a_Terraria_server'>Official documentation \ud83d\uddd7</a> for setting up the server.",
        "logo": "https://raw.githubusercontent.com/shmolf/portainer-templates/main/assets/logos/terraria-server.png",
        "platform": "linux",
        "image": "passivelemon/terraria-docker:latest",
        "ports": [
          "7777:7777/tcp"
        ],
        "restart_policy": "unless-stopped",
        "env": [
          {
            "label": "PUID",
            "name": "PUID",
            "default": "1000"
          },
          {
            "label": "PGID",
            "name": "PGID",
            "default": "1000"
          },
          {
            "label": "World name",
            "name": "WORLD",
            "default": "dockerworld"
          }
        ],
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Libraries/StirlingPDF/tessdata",
            "container": "/usr/share/tesseract-ocr/5/tessdata"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "AdGuard Home is a network-wide software for blocking ads & tracking.",
        "image": "adguard/adguardhome:latest",
        "logo": "https://developer.asustor.com/uploadIcons/0020_999_1595573028_AdGuardhome_256.png",
        "name": "Adguardhome",
        "platform": "linux",
        "ports": [
          "53:53/tcp",
          "53:53/udp",
          "67:67/udp",
          "80:80/tcp",
          "443:443/tcp",
          "443:443/udp",
          "3001:3000/tcp",
          "853:853/tcp",
          "784:784/udp",
          "853:853/udp",
          "8853:8853/udp",
          "5443:5443/tcp",
          "5443:5443/udp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Adguardhome",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/AdguardHome/config",
            "container": "/opt/adguardhome/conf"
          },
          {
            "bind": "/portainer/Files/AppData/Config/AdguardHome/work",
            "container": "/opt/adguardhome/work"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://adguard.com/en/adguard-home/overview.html\" target=\"_blank\">https://adguard.com/en/adguard-home/overview.html</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/AdguardTeam/AdGuardHome/wiki/Docker\" target=\"_blank\">https://github.com/AdguardTeam/AdGuardHome/wiki/Docker</a><br><br><br>"
      },
      {
        "categories": [
          "Dns",
          "Tools"
        ],
        "description": "Cloudflare DDNS - A small and fast DDNS updater for Cloudflare.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "default": "",
            "label": "CF_API_TOKEN",
            "name": "CF_API_TOKEN"
          },
          {
            "default": "",
            "label": "DOMAINS (Comma Separated List)",
            "name": "DOMAINS"
          },
          {
            "default": "true",
            "label": "PROXIED",
            "name": "PROXIED"
          }
        ],
        "image": "favonia/cloudflare-ddns:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/cloudflare-ddns.png",
        "name": "cloudflare-ddns",
        "platform": "linux",
        "restart_policy": "unless-stopped",
        "title": "Cloudflare DDNS",
        "type": 1,
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/\" target=\"_blank\">https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/favonia/cloudflare-ddns/\" target=\"_blank\">https://github.com/favonia/cloudflare-ddns/</a><br><br><br>"
      },
      {
        "categories": [
          "Dashboard"
        ],
        "description": "Dashy helps you organize your self-hosted services by making them accessible from a single place",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "lissy93/dashy:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dashy.png",
        "name": "Dashy",
        "platform": "linux",
        "ports": [
          "9100:80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Dashy",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Dashy/local-conf.yml",
            "container": "/app/public/conf.yml"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://dashy.to\" target=\"_blank\">https://dashy.to</a><br><b>Official Docker Documentation: </b><a href=\"https://dashy.to/docs/quick-start\" target=\"_blank\">https://dashy.to/docs/quick-start</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_dashy.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_dashy.sh | bash</h3><br><br>"
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.",
        "env": [
          {
            "default": "",
            "label": "Flame Password",
            "name": "PASSWORD"
          }
        ],
        "image": "pawelmalak/flame:multiarch",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/flame.png",
        "name": "Flame",
        "platform": "linux",
        "ports": [
          "5005:5005/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Flame",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Flame/data",
            "container": "/app/data"
          },
          {
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pawelmalak/flame\" target=\"_blank\">https://github.com/pawelmalak/flame</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pawelmalak/flame#with-docker-recommended\" target=\"_blank\">https://github.com/pawelmalak/flame#with-docker-recommended</a><br><br><br>"
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Ghost is a free and open source blogging platform written in JavaScript and distributed under the MIT License, designed to simplify the process of online publishing for individual bloggers as well as online publications.",
        "env": [
          {
            "default": "development",
            "label": "NODE_ENV",
            "name": "NODE_ENV"
          },
          {
            "default": "http://localhost/",
            "label": "url",
            "name": "url"
          }
        ],
        "image": "ghost:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/ghost.png",
        "name": "ghost",
        "platform": "linux",
        "ports": [
          "2368:2368/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Ghost",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Ghost",
            "container": "/var/lib/ghost/content"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/docker-library/docs/tree/master/ghost\" target=\"_blank\">https://github.com/docker-library/docs/tree/master/ghost</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/ghost\" target=\"_blank\">https://hub.docker.com/_/ghost</a><br><br><br>"
      },
      {
        "categories": [
          "Other"
        ],
        "description": "Ghostfolio is a privacy-first, open source dashboard for your personal finances. Break down your asset allocation, know your net worth and make solid, data-driven investment decisions.",
        "env": [
          {
            "default": "ghostfolio_usr",
            "label": "POSTGRES_USER",
            "name": "POSTGRES_USER"
          },
          {
            "default": "r2sp88fzvjnj9e24maycjv6e7kukj8wurcmt",
            "label": "POSTGRES_PASSWORD",
            "name": "POSTGRES_PASSWORD"
          },
          {
            "default": "ghostfolio_db",
            "label": "POSTGRES_DB",
            "name": "POSTGRES_DB"
          },
          {
            "default": "",
            "label": "ALPHA_VANTAGE_API_KEY",
            "name": "ALPHA_VANTAGE_API_KEY"
          },
          {
            "default": "4574k48a355hkcbew7h69xazz694bd32xmze",
            "label": "ACCESS_TOKEN_SALT",
            "name": "ACCESS_TOKEN_SALT"
          },
          {
            "default": "8k8zvx2krrrh7qcsqnsn73e5bvfesupy3b75",
            "label": "JWT_SECRET_KEY",
            "name": "JWT_SECRET_KEY"
          }
        ],
        "logo": "https://ghostfol.io/assets/apple-touch-icon.png",
        "name": "ghostfolio",
        "platform": "linux",
        "repository": {
          "stackfile": "stack/ghostfolio.yml",
          "url": "https://github.com/pi-hosted/pi-hosted/"
        },
        "restart_policy": "unless-stopped",
        "title": "Ghostfolio",
        "type": 3,
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://ghostfol.io/\" target=\"_blank\">https://ghostfol.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ghostfolio/ghostfolio#self-hosting\" target=\"_blank\">https://github.com/ghostfolio/ghostfolio#self-hosting</a><br><br><br>"
      },
      {
        "categories": [
          "Monitor",
          "Tools"
        ],
        "description": "Grafana Dashboard anything. Observe everything.  Query, visualize, alert on, and understand your data no matter where it\u2019s stored. With Grafana you can create, explore, and share all of your data through beautiful, flexible dashboards.",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/grafana.png",
        "name": "grafana",
        "platform": "linux",
        "ports": [
          "3030:3000/tcp"
        ],
        "repository": {
          "stackfile": "stack/grafana.yml",
          "url": "https://github.com/pi-hosted/pi-hosted"
        },
        "restart_policy": "unless-stopped",
        "title": "Grafana",
        "type": 3,
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://grafana.com/grafana/\" target=\"_blank\">https://grafana.com/grafana/</a><br><b>Official Docker Documentation: </b><a href=\"https://grafana.com/docs/grafana/v9.0/setup-grafana/installation/docker/\" target=\"_blank\">https://grafana.com/docs/grafana/v9.0/setup-grafana/installation/docker/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_grafana.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_grafana.sh | bash</h3><br><br>"
      },
      {
        "categories": [
          "Tools",
          "Web",
          "Other"
        ],
        "description": "Homarr is a simple and lightweight homepage for your server, that helps you easily access all of your services in one place.",
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homarr.vercel.app/\" target=\"_blank\">https://homarr.vercel.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ajnart/homarr\" target=\"_blank\">https://github.com/ajnart/homarr</a><br><br><br>This version is not secured and should only be used if you want Docker integration and you don't worry about users on your network.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "ghcr.io/ajnart/homarr:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homarr.png",
        "name": "homarr",
        "platform": "linux",
        "ports": [
          "7575:7575/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Homarr",
        "type": 1,
        "volumes": [
          {
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
          },
          {
            "bind": "/portainer/Files/AppData/Config/Homarr/configs",
            "container": "/app/data/configs"
          },
          {
            "bind": "/portainer/Files/AppData/Config/Homarr/icons",
            "container": "/app/public/icons"
          }
        ]
      },
      {
        "categories": [
          "Tools",
          "Web",
          "Other"
        ],
        "description": "Homarr is a simple and lightweight homepage for your server, that helps you easily access all of your services in one place.",
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homarr.vercel.app/\" target=\"_blank\">https://homarr.vercel.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ajnart/homarr\" target=\"_blank\">https://github.com/ajnart/homarr</a><br><br><br>This version does not allow for interaction with the docker environment for security purposes.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "ghcr.io/ajnart/homarr:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homarr.png",
        "name": "homarr-secured",
        "platform": "linux",
        "ports": [
          "7575:7575/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Homarr-Secured",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Homarr/configs",
            "container": "/app/data/configs"
          },
          {
            "bind": "/portainer/Files/AppData/Config/Homarr/icons",
            "container": "/app/public/icons"
          }
        ]
      },
      {
        "description": "Home Assistant is a free and open-source software for home automation that is designed to be the central control system for smart home devices with focus on local control and privacy.",
        "image": "homeassistant/home-assistant:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homeassistant.png",
        "name": "home-assistant",
        "platform": "linux",
        "ports": [
          "8999:8123/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Home Assistant",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/HomeAssistant/assets",
            "container": "/config"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.home-assistant.io/\" target=\"_blank\">https://www.home-assistant.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.home-assistant.io/installation/raspberrypi#install-home-assistant-container\" target=\"_blank\">https://www.home-assistant.io/installation/raspberrypi#install-home-assistant-container</a><br><br><br>",
        "categories": []
      },
      {
        "categories": [
          "Homeautomation"
        ],
        "description": "Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
        "env": [
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1",
            "label": "HOMEBRIDGE_CONFIG_UI",
            "name": "HOMEBRIDGE_CONFIG_UI"
          },
          {
            "default": "8581",
            "label": "HOMEBRIDGE_CONFIG_UI_PORT",
            "name": "HOMEBRIDGE_CONFIG_UI_PORT"
          },
          {
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ"
          }
        ],
        "image": "homebridge/homebridge:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homebridge.png",
        "name": "homebridge",
        "network": "host",
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homebridge.io/\" target=\"_blank\">https://homebridge.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker\" target=\"_blank\">https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker</a><br><br><br>Bringing HomeKit support where there is none",
        "platform": "linux",
        "privileged": true,
        "restart_policy": "unless-stopped",
        "title": "Homebridge",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/homebridge",
            "container": "/homebridge"
          }
        ]
      },
      {
        "categories": [
          "Dashboard"
        ],
        "description": "Homepage helps you organize your self-hosted services by making them accessible from a single place",
        "image": "ghcr.io/gethomepage/homepage:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homepage.png",
        "name": "Homepage",
        "platform": "linux",
        "ports": [
          "3015:3000/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Homepage",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Homepage/",
            "container": "/app/config"
          },
          {
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/benphelps/homepage\" target=\"_blank\">https://github.com/benphelps/homepage</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/benphelps/homepage\" target=\"_blank\">https://github.com/benphelps/homepage</a><br><br><br>"
      },
      {
        "categories": [
          "Video",
          "Music",
          "Photos",
          "Management"
        ],
        "description": "jfa-go is a user management app for Jellyfin (and now Emby) that provides invite-based account creation as well as other features that make one's instance much easier to manage.",
        "image": "hrfee/jfa-go:latest",
        "logo": "https://github.com/hrfee/jfa-go/raw/main/images/jfa-go-icon.png",
        "name": "jfa-go",
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://jfa-go.com/\" target=\"_blank\">https://jfa-go.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://wiki.jfa-go.com/\" target=\"_blank\">https://wiki.jfa-go.com/</a><br><br><br>This system is setup to work with either Emby or Jellyfin out of the box.  During the initial setup the user will have the option of which server they will be administering.",
        "platform": "linux",
        "restart_policy": "unless-stopped",
        "title": "Jellyfin-Accounts",
        "type": 1,
        "network": "bridge",
        "ports": [
          "8056:8056/tcp"
        ],
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Jelllyfin",
            "container": "/jf"
          },
          {
            "bind": "/portainer/Files/AppData/Config/jfago",
            "container": "/data"
          },
          {
            "bind": "/etc/localtime",
            "container": "/etc/localtime",
            "readonly": true
          }
        ]
      },
      {
        "categories": [
          "Library",
          "Books"
        ],
        "description": "Kavita is a fast, feature rich, cross platform reading server.",
        "image": "kizaing/kavita:latest",
        "logo": "https://raw.githubusercontent.com/Kareadita/Kavita/develop/Logo/kavita.svg",
        "name": "Kavita",
        "platform": "linux",
        "ports": [
          "5002:5000/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Kavita",
        "type": 1,
        "env": [
          {
            "default": "Your/Timezone",
            "label": "Timezone",
            "name": "TZ"
          }
        ],
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Kavita/manga",
            "container": "/manga"
          },
          {
            "bind": "/portainer/Files/AppData/Config/Kavita/comics",
            "container": "/comics"
          },
          {
            "bind": "/portainer/Files/AppData/Config/Kavita/books",
            "container": "/books"
          },
          {
            "bind": "/portainer/Files/AppData/Config/Kavita/config",
            "container": "/kavita/config"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.kavitareader.com/#home\" target=\"_blank\">https://www.kavitareader.com/#home</a><br><b>Official Docker Documentation: </b><a href=\"https://wiki.kavitareader.com/en/install/docker-install\" target=\"_blank\">https://wiki.kavitareader.com/en/install/docker-install</a><br><br><br>"
      },
      {
        "categories": [
          "Tools",
          "Productivity"
        ],
        "description": "This project is a lightweight authentication server that provides an opinionated, simplified LDAP interface for authentication.",
        "env": [
          {
            "default": "somesecretjwt",
            "label": "LLDAP_JWT_SECRET",
            "name": "LLDAP_JWT_SECRET"
          },
          {
            "default": "someadminpassword",
            "label": "LLDAP_LDAP_USER_PASS",
            "name": "LLDAP_LDAP_USER_PASS"
          },
          {
            "default": "dc=example,dc=com",
            "label": "LLDAP_LDAP_BASE_DN",
            "name": "LLDAP_LDAP_BASE_DN"
          }
        ],
        "image": "nitnelave/lldap:stable-debian",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/lldap.png",
        "name": "LLDAP",
        "platform": "linux",
        "ports": [
          "3890:3890/tcp",
          "17170:17170/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "LLDAP",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/lldap/data",
            "container": "/data"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/nitnelave/lldap\" target=\"_blank\">https://github.com/nitnelave/lldap</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/nitnelave/lldap\" target=\"_blank\">https://github.com/nitnelave/lldap</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_lldap.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_lldap.sh | bash</h3><br><br>"
      },
      {
        "categories": [
          "Other",
          "Tools",
          "Games"
        ],
        "description": "This docker image provides a Minecraft Server that will automatically download the latest stable version at startup. You can also run/upgrade to any specific version or the latest snapshot. See the Versions section below for more information.",
        "env": [
          {
            "default": "TRUE",
            "label": "EULA",
            "name": "EULA"
          }
        ],
        "image": "itzg/minecraft-server:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/minecraft.png",
        "name": "minecraft",
        "platform": "linux",
        "ports": [
          "25565:25565/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Minecraft Server",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Minecraft-data",
            "container": "/data"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.minecraft.net/en-us\" target=\"_blank\">https://www.minecraft.net/en-us</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/itzg/docker-minecraft-server#using-docker-compose\" target=\"_blank\">https://github.com/itzg/docker-minecraft-server#using-docker-compose</a><br><br><br>"
      },
      {
        "categories": [
          "Proxy",
          "Tools"
        ],
        "description": "Nginx Proxy Manager v2 with sqlite and Goaccess Charts enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ"
          },
          {
            "default": "false",
            "label": "SKIP_ARCHIVED_LOGS",
            "name": "SKIP_ARCHIVED_LOGS",
            "description": "Defaults to false. Set to true to skip archived logs, i.e. proxy-host*.gz"
          },
          {
            "default": "false",
            "label": "BASIC_AUTH",
            "name": "BASIC_AUTH",
            "description": "Defaults to false. Set to true to enable nginx basic authentication. Docker container needs to stopped or restarted each time this flag is modified. This allows for the .htpasswd file to be changed accordingly."
          },
          {
            "default": "user",
            "label": "BASIC_AUTH_USERNAME Ignore if Basic Auth set to false",
            "name": "BASIC_AUTH_USERNAME",
            "description": "(Optional) Requires BASIC_AUTH to bet set to true. Username for basic authentication."
          },
          {
            "default": "Password",
            "label": "BASIC_AUTH_PASSWORD Ignore if Basic Auth set to false",
            "name": "BASIC_AUTH_PASSWORD",
            "description": "(Optional) Requires BASIC_AUTH to bet set to true. Password for basic authentication."
          }
        ],
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
        "name": "nginx-proxy-manager-sqllite-goaccess",
        "platform": "linux",
        "ports": [
          "80:80/tcp",
          "81:81/tcp",
          "443:443/tcp",
          "7880:7880/tcp"
        ],
        "repository": {
          "stackfile": "stack/nginx-proxy-manager-sqlite-goaccess.yml",
          "url": "https://github.com/pi-hosted/pi-hosted"
        },
        "restart_policy": "unless-stopped",
        "title": "Nginx Proxy Manager v2 with Sqlite and Goaccess Charts",
        "type": 3,
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/#running-the-app\" target=\"_blank\">https://nginxproxymanager.com/setup/#running-the-app</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
      },
      {
        "categories": [
          "Proxy",
          "Tools"
        ],
        "description": "Nginx Proxy Manager v2 with Sqlite enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ"
          }
        ],
        "image": "jc21/nginx-proxy-manager:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
        "name": "nginx-proxy-manager-sqlite",
        "platform": "linux",
        "ports": [
          "80:80/tcp",
          "81:81/tcp",
          "443:443/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Nginx Proxy Manager v2 with Sqllite",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/nginx-proxy-manager/data",
            "container": "/data"
          },
          {
            "bind": "/portainer/Files/AppData/Config/nginx-proxy-manager/letsencrypt",
            "container": "/etc/letsencrypt"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/\" target=\"_blank\">https://nginxproxymanager.com/setup/</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "organizr/organizr:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/organizr-icon.png",
        "name": "organizr-v2",
        "platform": "linux",
        "ports": [
          "7171:80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Organizr v2",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Organizr",
            "container": "/config"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://organizr.app/\" target=\"_blank\">https://organizr.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/organizr/organizr\" target=\"_blank\">https://hub.docker.com/r/organizr/organizr</a><br><br><br>"
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "PGAdmin is a web-based GUI tool used to interact with the Postgres database sessions, both locally and remote servers as well. You can use PGAdmin to perform any sort of database administration required for a Postgres database.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "default": "",
            "label": "PGADMIN_DEFAULT_EMAIL",
            "name": "PGADMIN_DEFAULT_EMAIL"
          },
          {
            "default": "",
            "label": "PGADMIN_DEFAULT_PASSWORD",
            "name": "PGADMIN_DEFAULT_PASSWORD"
          },
          {
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ"
          }
        ],
        "image": "dpage/pgadmin4:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pgadmin.png",
        "name": "pgadmin",
        "platform": "linux",
        "ports": [
          "5050:80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "pgAdmin",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/pgadmin",
            "container": "/var/lib/pgadmin"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.pgadmin.org/\" target=\"_blank\">https://www.pgadmin.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html\" target=\"_blank\">https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_pgadmin.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_pgadmin.sh | bash</h3><br><br>"
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole with both DoH (DNS over HTTPS) and DoT (DNS over TLS) clients.",
        "image": "oijkn/pihole-doh-dot:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole_doh-dot.png",
        "name": "pihole DoH/DoT",
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://pi-hole.net/\" target=\"_blank\">https://pi-hole.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/oijkn/pihole-doh-dot\" target=\"_blank\">https://hub.docker.com/r/oijkn/pihole-doh-dot</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pi-hole.md\" target=\"_blank\">pi-hole.md</a></h3><br><br><br>When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53. If you like to use Pi-Hole's built in DHCP-Server change the Network type to host and open advance options and scroll to Labels and add: NET_ADMIN with the value True. When you do so, specify a port is no more needed, navigate to your.ip.goes.here/admin.",
        "platform": "linux",
        "ports": [
          "53:53/tcp",
          "53:53/udp",
          "67:67/udp",
          "1010:80/tcp",
          "4443:443/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Pi-Hole DoH/DoT",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT",
            "container": "/etc/pihole"
          },
          {
            "bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT/DNS",
            "container": "/etc/dnsmasq.d"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "PostgreSQL, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance.",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "default": "rootpassword",
            "label": "POSTGRES_PASSWORD",
            "name": "POSTGRES_PASSWORD"
          },
          {
            "default": "America/New_York",
            "label": "TZ",
            "name": "TZ"
          }
        ],
        "image": "postgres:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/postgresql.png",
        "name": "postgresql",
        "platform": "linux",
        "ports": [
          "5432:5432/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "PostgreSQL",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/PostgreSQL",
            "container": "/var/lib/postgresql/data"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.postgresql.org/\" target=\"_blank\">https://www.postgresql.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/postgres/\" target=\"_blank\">https://hub.docker.com/_/postgres/</a><br><br><br>"
      },
      {
        "categories": [
          "Tools",
          "Web",
          "Other"
        ],
        "description": "Run a Speedtest every hour and graph the results.  See https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/tags for arch options",
        "env": [
          {
            "default": "true",
            "label": "OOKLA_EULA_GDPR",
            "name": "OOKLA_EULA_GDPR"
          }
        ],
        "image": "henrywhitaker3/speedtest-tracker:dev-arm",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/speedtest-tracker.png",
        "name": "speedtest-tracker",
        "platform": "linux",
        "ports": [
          "8765:80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Speedtest Tracker",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/speedtest-tracker",
            "container": "/config"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker</a><br><br><br>"
      },
      {
        "categories": [
          "Other",
          "Vpn"
        ],
        "command": "tailscale up --authkey=$AUTH_KEY",
        "description": "Connect your devices and users together in your own secure Zero config virtual private network. ",
        "env": [
          {
            "default": "",
            "description": "Get AUTH KEY from your tailscale.com user panel",
            "label": "AUTH_KEY",
            "name": "AUTH_KEY"
          }
        ],
        "image": "tailscale/tailscale:stable",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/tailscale-icon.png",
        "name": "tailscale",
        "platform": "linux",
        "restart_policy": "unless-stopped",
        "title": "Tailscale",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/tailscale",
            "container": "/var/lib/tailscale"
          },
          {
            "bind": "/dev/net/tun",
            "container": "/dev/net/tun"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://tailscale.com/\" target=\"_blank\">https://tailscale.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/tailscale/tailscale\" target=\"_blank\">https://hub.docker.com/r/tailscale/tailscale</a><br><br><br>"
      },
      {
        "categories": [
          "Proxy",
          "Security",
          "Tools"
        ],
        "description": "Cloud-Native Networking Stack That Just Works.",
        "image": "traefik:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/traefik.png",
        "name": "traefik",
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://doc.traefik.io/traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/</a><br><b>Official Docker Documentation: </b><a href=\"https://doc.traefik.io/traefik/getting-started/install-traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/getting-started/install-traefik/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/traefik.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/traefik.sh | bash</h3><br><br>A simple and lightweight reverse proxy",
        "platform": "linux",
        "ports": [
          "80:80/tcp",
          "443:443/tcp",
          "8080:8080/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Traefik",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/traefik/traefik.yml",
            "container": "/traefik.yml"
          },
          {
            "bind": "/portainer/Files/AppData/Config/traefik/config.yml",
            "container": "/config.yml"
          },
          {
            "bind": "/portainer/Files/AppData/Config/traefik/acme.json",
            "container": "/acme.json"
          },
          {
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
          }
        ]
      },
      {
        "categories": [
          "Cctv"
        ],
        "description": "UniFi Video is a powerful and flexible, integrated IP video management surveillance system designed to work with Ubiquiti\u2019s UniFi Video Camera product line. UniFi Video has an intuitive, configurable, and feature\u2011packed user interface with advanced features such as motion detection, auto\u2011discovery, user\u2011level security, storage management, reporting, and mobile device support.",
        "env": [
          {
            "default": "99",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "default": "002",
            "label": "UMASK",
            "name": "UMASK"
          },
          {
            "default": "UniFi Video",
            "label": "CONTEXT_PATH",
            "name": "CONTEXT_PATH"
          }
        ],
        "image": "pducharme/unifi-video-controller:latest",
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/unifivideo-icon.png",
        "name": "UniFi Video",
        "platform": "linux",
        "ports": [
          "1935:1935/tcp",
          "7444:7444/tcp",
          "7447:7447/tcp",
          "6666:6666/tcp",
          "7442:7442/tcp",
          "7080:7080/tcp",
          "7443:7443/tcp",
          "7445:7445/tcp",
          "7446:7446/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "UniFi Video",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/UnifFiVideo/Recordings/",
            "container": "/recordings"
          },
          {
            "bind": "/portainer/Files/AppData/Config/UniFiVideo/",
            "container": "/config"
          }
        ],
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pducharme/UniFi-Video-Controller\" target=\"_blank\">https://github.com/pducharme/UniFi-Video-Controller</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pducharme/UniFi-Video-Controller\" target=\"_blank\">https://github.com/pducharme/UniFi-Video-Controller</a><br><br><br>"
      },
      {
        "categories": [
          "Other",
          "Vpn"
        ],
        "description": "Fast VPN Server with easy to use User Interface",
        "env": [
          {
            "default": "example.domain.com",
            "description": "Set here your DDNS domain",
            "label": "WG_HOST",
            "name": "WG_HOST"
          },
          {
            "default": "ENTER AN ADMIN PASSWORD",
            "description": "Leave blank to access WebUI without loggin",
            "label": "PASSWORD",
            "name": "PASSWORD"
          },
          {
            "default": "51820",
            "label": "WG_PORT",
            "name": "WG_PORT"
          },
          {
            "default": "1.1.1.1",
            "label": "WG_DEFAULT_DNS",
            "name": "WG_DEFAULT_DNS"
          },
          {
            "default": "10.8.0.x",
            "label": "WG_DEFAULT_ADDRESS",
            "name": "WG_DEFAULT_ADDRESS"
          },
          {
            "default": "0.0.0.0/0, ::/0",
            "label": "WG_ALLOWED_IPS",
            "name": "WG_ALLOWED_IPS"
          }
        ],
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wireguard.png",
        "name": "wg-easy",
        "platform": "linux",
        "repository": {
          "stackfile": "stack/wireguard-easy.yml",
          "url": "https://github.com/pi-hosted/pi-hosted"
        },
        "title": "Wireguard Server",
        "type": 3,
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/WeeJeWel/wg-easy/\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/WeeJeWel/wg-easy/#1-install-docker\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/#1-install-docker</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/wireguard-install.md\" target=\"_blank\">wireguard-install.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yB_jAumIxOg target=\"_blank\">Novaspirit Tech - Beginners Guide to WireGuard Docker and Installing Pi-OS 64bit</a><br><br>"
      },
      {
        "categories": [
          "Wordpress",
          "Web"
        ],
        "description": "Wordpress setup with a MySQL database",
        "env": [
          {
            "default": "5080",
            "label": "External Port for webserver forward to port 80",
            "name": "WEB_SERVER_PORT"
          },
          {
            "default": "wordpress",
            "label": "Database user name",
            "name": "MYSQL_DATABASE_USER_NAME"
          },
          {
            "label": "Database password for user",
            "name": "MYSQL_DATABASE_PASSWORD"
          },
          {
            "label": "Database root password",
            "name": "MYSQL_DATABASE_ROOT_PASSWORD"
          }
        ],
        "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wordpress.png",
        "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://wordpress.com/\" target=\"_blank\">https://wordpress.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/docker-library/docs/tree/master/wordpress#-via-docker-stack-deploy-or-docker-compose\" target=\"_blank\">https://github.com/docker-library/docs/tree/master/wordpress#-via-docker-stack-deploy-or-docker-compose</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/wordpress_installation.md\" target=\"_blank\">wordpress_installation.md</a></h3><br><br><br>Deploys a Wordpress instance connected to a MySQL database.",
        "platform": "linux",
        "repository": {
          "stackfile": "stack/wordpress-stack.yml",
          "url": "https://github.com/pi-hosted/pi-hosted"
        },
        "title": "Wordpress",
        "type": 3
      },
      {
        "type": 1,
        "name": "gaps",
        "title": "Gaps",
        "description": "Gaps searches through your Plex Server or local folders for all movies, then queries for known movies in the same collection.",
        "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
        "image": "housewrecker/gaps:latest",
        "categories": [
          "Tools",
          "Networkweb",
          "Networkother"
        ],
        "ports": [
          "8484/tcp"
        ],
        "volumes": [],
        "env": [
          {
            "name": "TZ",
            "label": "TZ",
            "default": "America/Los_Angeles"
          }
        ],
        "labels": [
          {
            "name": "traefik.enable",
            "value": "true"
          },
          {
            "name": "traefik.http.services.gaps.loadbalancer.server.port",
            "value": "8484"
          },
          {
            "name": "traefik.http.routers.gaps.entrypoints",
            "value": "websecure"
          },
          {
            "name": "traefik.http.routers.gaps.tls.certresolver",
            "value": "mydnschallenge"
          }
        ]
      },
      {
        "type": 1,
        "name": "healthchecks",
        "title": "Healthchecks",
        "description": "Healthchecks is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
        "logo": "https://mediadepot.github.io/templates/img/healthchecks-logo.png",
        "image": "linuxserver/healthchecks",
        "categories": [
          "Tools",
          "Networkweb",
          "Networkother",
          "Statusstable"
        ],
        "ports": [
          "8000/tcp"
        ],
        "volumes": [
          {
            "container": "/config",
            "bind": "/opt/mediadepot/apps/healthchecks"
          }
        ],
        "env": [
          {
            "name": "PGID",
            "label": "PGID",
            "default": "15000",
            "preset": true
          },
          {
            "name": "PUID",
            "label": "PUID",
            "default": "15000",
            "preset": true
          },
          {
            "name": "TZ",
            "label": "TZ",
            "default": "America/Los_Angeles"
          },
          {
            "name": "SITE_ROOT",
            "label": "SITE_ROOT",
            "default": "healthchecks.depot.lan"
          },
          {
            "name": "SITE_NAME",
            "label": "SITE_NAME",
            "default": "healthchecks"
          },
          {
            "name": "DEFAULT_FROM_EMAIL",
            "label": "DEFAULT_FROM_EMAIL",
            "default": "healthchecks@depot.lan"
          },
          {
            "name": "EMAIL_HOST",
            "label": "EMAIL_HOST",
            "default": ""
          },
          {
            "name": "EMAIL_PORT",
            "label": "EMAIL_PORT",
            "default": ""
          },
          {
            "name": "EMAIL_HOST_USER",
            "label": "EMAIL_HOST_USER",
            "default": ""
          },
          {
            "name": "EMAIL_HOST_PASSWORD",
            "label": "EMAIL_HOST_PASSWORD",
            "default": ""
          },
          {
            "name": "EMAIL_USE_TLS",
            "label": "EMAIL_USE_TLS",
            "default": ""
          }
        ],
        "labels": [
          {
            "name": "traefik.enable",
            "value": "true"
          },
          {
            "name": "traefik.http.services.healthchecks.loadbalancer.server.port",
            "value": "8000"
          },
          {
            "name": "traefik.http.routers.healthchecks.entrypoints",
            "value": "websecure"
          },
          {
            "name": "traefik.http.routers.healthchecks.tls.certresolver",
            "value": "mydnschallenge"
          }
        ]
      },
      {
        "type": 1,
        "name": "plex",
        "title": "Plex Media Server",
        "description": "Plex organizes your video, music, and photo collections and streams them to all of your screens.",
        "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
        "image": "linuxserver/plex:latest",
        "network": "host",
        "categories": [
          "Mediaservervideo",
          "Mediaservermusic",
          "Mediaserverphotos"
        ],
        "privileged": true,
        "ports": [],
        "volumes": [
          {
            "container": "/config",
            "bind": "/opt/mediadepot/apps/plex"
          },
          {
            "container": "/data/tvshows",
            "bind": "/media/storage/tvshows"
          },
          {
            "container": "/data/movies",
            "bind": "/media/storage/movies"
          },
          {
            "container": "/data/music",
            "bind": "/media/storage/music"
          },
          {
            "container": "/transcode"
          }
        ],
        "env": [
          {
            "name": "PGID",
            "label": "PGID",
            "default": "15000",
            "preset": true
          },
          {
            "name": "PUID",
            "label": "PUID",
            "default": "15000",
            "preset": true
          },
          {
            "name": "TZ",
            "label": "TZ",
            "default": "America/Los_Angeles"
          },
          {
            "name": "VERSION",
            "label": "VERSION",
            "default": "latest"
          }
        ],
        "labels": [
          {
            "name": "traefik.enable",
            "value": "true"
          },
          {
            "name": "traefik.http.services.plex.loadbalancer.server.port",
            "value": "32400"
          }
        ]
      },
      {
        "type": 3,
        "name": "plextraktsync",
        "title": "PlexTraktSync",
        "description": "A python script that syncs the movies, shows and ratings between trakt and Plex",
        "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
        "categories": [
          "Documents",
          "Tools"
        ],
        "repository": {
          "url": "https://github.com/mediadepot/templates",
          "stackfile": "stacks/plextraktsync/docker-compose.yml"
        }
      },
      {
        "type": 1,
        "name": "wizarr",
        "title": "Wizarr",
        "description": " Wizarr is an advanced user invitation and management system for Jellyfin, Plex, Emby etc. ",
        "logo": "https://mediadepot.github.io/templates/img/wizarr-logo.png",
        "image": "ghcr.io/wizarrrr/wizarr",
        "categories": [
          "Tools"
        ],
        "ports": [
          "5690/tcp"
        ],
        "volumes": [
          {
            "container": "/data/database",
            "bind": "/opt/mediadepot/apps/wizarr"
          },
          {
            "container": "/etc/localtime",
            "bind": "/etc/localtime",
            "readonly": true
          }
        ],
        "env": [
          {
            "name": "APP_URL",
            "label": "APP_URL",
            "default": "https://wizarr.domain.com"
          }
        ],
        "labels": [
          {
            "name": "traefik.enable",
            "value": "true"
          },
          {
            "name": "traefik.http.services.wizarr.loadbalancer.server.port",
            "value": "5690"
          },
          {
            "name": "traefik.http.routers.wizarr.entrypoints",
            "value": "websecure"
          },
          {
            "name": "traefik.http.routers.wizarr.tls.certresolver",
            "value": "mydnschallenge"
          }
        ]
      },
      {
        "categories": [
          "Other",
          "Tools"
        ],
        "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
        "image": "bitwardenrs/server:latest",
        "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/bitwarden.png",
        "name": "bitwardenrs",
        "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
        "platform": "linux",
        "ports": [
          ":80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Bitwarden RS",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Bitwarden-rs",
            "container": "/config"
          }
        ]
      },
      {
        "type": 1,
        "title": "Datadog agent",
        "description": "Collect events and metrics",
        "categories": [
          "Monitoring"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
        "image": "datadog/agent:latest",
        "env": [
          {
            "name": "DD_API_KEY",
            "label": "Datadog API key"
          }
        ],
        "volumes": [
          {
            "container": "/var/run/docker.sock",
            "bind": "/var/run/docker.sock",
            "readonly": true
          },
          {
            "container": "/host/sys/fs/cgroup",
            "bind": "/sys/fs/cgroup",
            "readonly": true
          },
          {
            "container": "/host/proc",
            "bind": "/proc",
            "readonly": true
          }
        ]
      },
      {
        "type": 1,
        "title": "Drupal",
        "description": "Open-source content management framework",
        "categories": [
          "Cms"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
        "image": "drupal:latest",
        "ports": [
          "80/tcp"
        ],
        "volumes": [
          {
            "container": "/var/www/html"
          }
        ]
      },
      {
        "type": 1,
        "title": "Elasticsearch",
        "description": "Open-source search and analytics engine",
        "categories": [
          "Database"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
        "image": "elasticsearch:latest",
        "ports": [
          "9200/tcp",
          "9300/tcp"
        ],
        "volumes": [
          {
            "container": "/usr/share/elasticsearch/data"
          }
        ]
      },
      {
        "type": 1,
        "title": "Gitlab CE",
        "description": "Open-source end-to-end software development platform",
        "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
        "categories": [
          "Development",
          "Projectmanagement"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
        "image": "gitlab/gitlab-ce:latest",
        "ports": [
          "80/tcp",
          "443/tcp",
          "22/tcp"
        ],
        "volumes": [
          {
            "container": "/etc/gitlab"
          },
          {
            "container": "/var/log/gitlab"
          },
          {
            "container": "/var/opt/gitlab"
          }
        ]
      },
      {
        "type": 1,
        "title": "Jenkins",
        "description": "Open-source continuous integration tool",
        "categories": [
          "Continuousintegration"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
        "image": "jenkins/jenkins:lts",
        "ports": [
          "8080/tcp",
          "50000/tcp"
        ],
        "env": [
          {
            "name": "JENKINS_OPTS",
            "label": "Jenkins options"
          }
        ],
        "volumes": [
          {
            "container": "/var/jenkins_home"
          }
        ]
      },
      {
        "type": 1,
        "title": "Mongo",
        "description": "Open-source document-oriented database",
        "categories": [
          "Database"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
        "image": "mongo:latest",
        "ports": [
          "27017/tcp"
        ],
        "volumes": [
          {
            "container": "/data/db"
          }
        ]
      },
      {
        "type": 1,
        "title": "MySQL",
        "description": "The most popular open-source database",
        "categories": [
          "Database"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
        "image": "mysql:latest",
        "env": [
          {
            "name": "MYSQL_ROOT_PASSWORD",
            "label": "Root password"
          }
        ],
        "ports": [
          "3306/tcp"
        ],
        "volumes": [
          {
            "container": "/var/lib/mysql"
          }
        ]
      },
      {
        "type": 2,
        "title": "NextcloudStack",
        "description": "Nextcloud setup with a MySQL database",
        "note": "Deploys a Nextcloud instance connected to a MySQL database.",
        "categories": [
          "Cloud"
        ],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/nextcloud-icon.png",
        "repository": {
          "url": "https://github.com/mikestraney/portainer-templates",
          "stackfile": "stacks/nextcloud/docker-stack.yml"
        },
        "env": [
          {
            "label": "MYSQL_PASSWORD",
            "name": "mypassword",
            "description": "password for sql"
          },
          {
            "label": "MYSQL_ROOT_PASSWORD",
            "name": "myrpassword",
            "description": "root password for sql"
          }
        ]
      },
      {
        "type": 2,
        "title": "Portainer Agent",
        "description": "Manage all the resources in your Swarm cluster",
        "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
        "categories": [
          "Portainer"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
        "repository": {
          "url": "https://github.com/mikestraney/portainer-templates",
          "stackfile": "stacks/portainer-agent/docker-stack.yml"
        }
      },
      {
        "type": 1,
        "title": "RabbitMQ",
        "description": "Highly reliable enterprise messaging system",
        "categories": [
          "Messaging"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
        "image": "rabbitmq:latest",
        "ports": [
          "5671/tcp",
          "5672/tcp"
        ],
        "volumes": [
          {
            "container": "/var/lib/rabbitmq"
          }
        ]
      },
      {
        "type": 1,
        "title": "Redis",
        "description": "Open-source in-memory data structure store",
        "categories": [
          "Database"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
        "image": "redis:latest",
        "ports": [
          "6379/tcp"
        ],
        "volumes": [
          {
            "container": "/data"
          }
        ]
      },
      {
        "type": 1,
        "title": "Redmine",
        "description": "Open-source project management tool",
        "categories": [
          "Projectmanagement"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
        "image": "redmine:latest",
        "ports": [
          "3000/tcp"
        ],
        "volumes": [
          {
            "container": "/usr/src/redmine/files"
          }
        ]
      },
      {
        "type": 1,
        "title": "Registry",
        "description": "Docker image registry",
        "categories": [
          "Docker"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
        "image": "registry:latest",
        "ports": [
          "5000/tcp"
        ],
        "volumes": [
          {
            "container": "/var/lib/registry"
          }
        ]
      },
      {
        "type": 1,
        "title": "SQL Server",
        "description": "Microsoft SQL Server on Linux",
        "categories": [
          "Database"
        ],
        "platform": "linux",
        "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
        "image": "microsoft/mssql-server-linux:2017-GA",
        "ports": [
          "1433/tcp"
        ],
        "env": [
          {
            "name": "ACCEPT_EULA",
            "set": "Y"
          },
          {
            "name": "SA_PASSWORD",
            "label": "SA password"
          }
        ]
      },
      {
        "type": 1,
        "title": "SQL Server Express",
        "description": "Microsoft SQL Server Express for Windows containers",
        "categories": [
          "Database"
        ],
        "platform": "windows",
        "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
        "image": "microsoft/mssql-server-windows-express:latest",
        "ports": [
          "1433/tcp"
        ],
        "env": [
          {
            "name": "ACCEPT_EULA",
            "set": "Y"
          },
          {
            "name": "sa_password",
            "label": "SA password"
          }
        ],
        "volumes": [
          {
            "container": "C:/temp/"
          }
        ]
      },
      {
        "categories": [
          "Authenticationserver"
        ],
        "description": "Authentik is an open-source Identity Provider focused on flexibility and versatility",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          },
          {
            "label": "PORT",
            "name": "PORT"
          }
        ],
        "logo": "https://raw.githubusercontent.com/mycroftwilde/portainer_templates/master/Images/goauthentik.png",
        "name": "Authentik",
        "platform": "linux",
        "repository": {
          "stackfile": "Template/Stack/authentik.yml",
          "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "Authentik",
        "type": 3
      },
      {
        "categories": [
          "Libraryserver"
        ],
        "description": "Audiobook Server",
        "env": [
          {
            "default": "1000",
            "label": "PUID",
            "name": "PUID"
          },
          {
            "default": "1000",
            "label": "PGID",
            "name": "PGID"
          }
        ],
        "image": "ghcr.io/advplyr/audiobookshelf:latest",
        "logo": "https://raw.githubusercontent.com/mycroftwilde/portainer_templates/master/Images/AudioBookshelfLogo.png",
        "name": "Audiobookshelf",
        "platform": "linux",
        "ports": [
          "13378:80/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Audiobookshelf",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/Audiobookshelf",
            "container": "/config"
          },
          {
            "bind": "/path/to/audiobooks",
            "container": "/audiobooks"
          },
          {
            "bind": "/path/to/podcasts",
            "container": "/podcasts"
          },
          {
            "bind": "/path/to/Metadata",
            "container": "/metadata"
          }
        ]
      },
      {
        "categories": [
          "Dashboardserver"
        ],
        "description": "Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.",
        "image": "pawelmalak/flame",
        "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/flame.png",
        "name": "flame-dashboard",
        "platform": "linux",
        "ports": [
          "5005:5005/tcp"
        ],
        "restart_policy": "unless-stopped",
        "title": "Flame-Dashboard",
        "type": 1,
        "volumes": [
          {
            "bind": "/portainer/Files/AppData/Config/flame-dashboard",
            "container": "/app/data"
          }
        ]
      },
      {
        "type": 1,
        "categories": [
          "Ftpserver"
        ],
        "title": "Filezilla",
        "name": "Filezilla",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/filezilla/config</p>",
        "description": "[FIleZilla](https://filezilla-project.org/) Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.",
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png",
        "image": "linuxserver/filezilla:latest",
        "env": [
          {
            "name": "PUID",
            "label": "PUID",
            "default": "1024",
            "description": "for GroupID"
          },
          {
            "name": "PGID",
            "label": "PGID",
            "default": "100",
            "description": "for UserID"
          },
          {
            "name": "TZ",
            "label": "TZ",
            "default": "Europe/Amsterdam",
            "description": "Specify a timezone to use for example Europe/Amsterdam"
          }
        ],
        "ports": [
          "3000:3000/tcp"
        ],
        "volumes": [
          {
            "container": "/config",
            "bind": "/volume1/docker/filezilla/config"
          }
        ],
        "restart_policy": "unless-stopped"
      },
      {
        "type": 1,
        "categories": [
          "Vpnserver"
        ],
        "title": "Wireguard",
        "name": "Wireguard",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireguard/config<br></p>",
        "description": "[WireGuard\u00ae](https://www.wireguard.com/) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
        "platform": "linux",
        "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Logo_of_WireGuard.png/320px-Logo_of_WireGuard.png",
        "image": "linuxserver/wireguard:latest",
        "env": [
          {
            "name": "PUID",
            "label": "PUID",
            "default": "1024",
            "description": "for GroupID"
          },
          {
            "name": "PGID",
            "label": "PGID",
            "default": "100",
            "description": "for UserID"
          },
          {
            "name": "TZ",
            "label": "TZ",
            "default": "Europe/Amsterdam",
            "description": "Specify a timezone to use for example Europe/Amsterdam"
          },
          {
            "name": "SERVERURL",
            "label": "SERVERURL",
            "default": "wireguard.domain.com",
            "description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically"
          },
          {
            "name": "SERVERPORT",
            "label": "SERVERPORT",
            "default": "51820",
            "description": "External port for docker host. Used in server mode."
          },
          {
            "name": "PEERS",
            "label": "PEERS",
            "default": "1",
            "description": "Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only)"
          },
          {
            "name": "PEERDNS",
            "label": "PEERDNS",
            "default": "auto",
            "description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward."
          },
          {
            "name": "INTERNAL_SUBNET",
            "label": "INTERNAL_SUBNET",
            "default": "10.13.13.0",
            "description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode."
          },
          {
            "name": "ALLOWEDIPS",
            "label": "ALLOWEDIPS",
            "default": "0.0.0.0/0",
            "description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1."
          }
        ],
        "ports": [
          "51820:51820/udp"
        ],
        "volumes": [
          {
            "container": "/config",
            "bind": "/volume1/docker/wireguard/config"
          },
          {
            "container": "/lib/modules",
            "bind": "/lib/modules"
          }
        ],
        "restart_policy": "unless-stopped"
      },
      {
        "categories": [
          "Managementutilityserver"
        ],
        "type": 1,
        "title": "Wireshark",
        "name": "Wireshark",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireshark/config</p>",
        "description": "[Wireshark](https://www.wireshark.org/) is the world\u2019s foremost and widely-used network protocol analyzer. It lets you see what\u2019s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
        "image": "linuxserver/wireshark:latest",
        "network": "host",
        "env": [
          {
            "name": "PUID",
            "label": "PUID",
            "default": "1024",
            "description": "for GroupID"
          },
          {
            "name": "PGID",
            "label": "PGID",
            "default": "100",
            "description": "for UserID"
          },
          {
            "name": "TZ",
            "label": "TZ",
            "default": "Europe/Amsterdam",
            "description": "Specify a timezone to use for example Europe/Amsterdam"
          }
        ],
        "ports": [
          "3000:3000/tcp"
        ],
        "volumes": [
          {
            "container": "/config",
            "bind": "/volume1/docker/wireshark/config"
          }
        ],
        "restart_policy": "unless-stopped"
      },
      {
        "type": 1,
        "title": "Phpmyadmin",
        "name": "Phpmyadmin",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/phpmyadmin/config</p>",
        "description": "[Phpmyadmin](https://github.com/phpmyadmin/phpmyadmin/) is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
        "categories": [
          "Databaseserver"
        ],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png",
        "image": "linuxserver/phpmyadmin:latest",
        "env": [
          {
            "name": "PUID",
            "label": "PUID",
            "default": "1024",
            "description": "for GroupID"
          },
          {
            "name": "PGID",
            "label": "PGID",
            "default": "100",
            "description": "for UserID"
          },
          {
            "name": "TZ",
            "label": "TZ",
            "default": "Europe/Amsterdam",
            "description": "Specify a timezone to use for example Europe/Amsterdam"
          },
          {
            "name": "PMA_ARBITRARY",
            "label": "PMA_ARBITRARY",
            "default": "1",
            "description": "Set to `1` to allow you to connect to any server. Setting to `0` will only allow you to connect to specified hosts (See Application Setup)"
          },
          {
            "name": "PMA_ABSOLUTE_URI",
            "label": "PMA_ABSOLUTE_URI",
            "default": "https://phpmyadmin.example.com",
            "description": "Set the URL you will use to access the web frontend"
          }
        ],
        "ports": [
          "80:80/tcp"
        ],
        "volumes": [
          {
            "container": "/config",
            "bind": "/volume1/docker/phpmyadmin/config"
          }
        ],
        "restart_policy": "unless-stopped"
      },
      {
        "type": 1,
        "title": "Obsidian",
        "name": "Obsidian",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/obsidian/config</p>",
        "description": "[Obsidian](https://obsidian.md) is a note-taking app that lets you create, link, and organize your notes on your device, with hundreds of plugins and themes to customize your workflow. You can also publish your notes online, access them offline, and sync them securely with end-to-end encryption.",
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/obsidian-logo.png",
        "image": "linuxserver/obsidian:latest",
        "env": [
          {
            "name": "PUID",
            "label": "PUID",
            "default": "1024",
            "description": "for UserID"
          },
          {
            "name": "PGID",
            "label": "PGID",
            "default": "100",
            "description": "for GroupID"
          },
          {
            "name": "TZ",
            "label": "TZ",
            "default": "Europe/Amsterdam",
            "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          }
        ],
        "ports": [
          "3000:3000/tcp",
          "3001:3001/tcp"
        ],
        "volumes": [
          {
            "container": "/config",
            "bind": "/volume1/docker/obsidian/config"
          }
        ],
        "restart_policy": "unless-stopped",
        "categories": []
      },
      {
        "categories": [
          "Tools"
        ],
        "description": "Your Budgets, Calendars, Meals, Inventory, Tasks, and so much more in one simple app.For everyone in your household.On all of your devices.In the cloud or self-hosted",
        "logo": "https://homechart.app/images/homechart.min.776793e5e4334866f0799e8a84b8448efb1b06cb2762b2bb20f99068ac36136c.png",
        "name": "homechart",
        "platform": "linux",
        "repository": {
          "stackfile": "Template/Stack/homechart.yml",
          "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "Homechart",
        "type": 3
      },
      {
        "categories": [
          "Devops"
        ],
        "description": "Modern UI for Ansible",
        "logo": "https://res.cloudinary.com/canonical/image/fetch/f_auto,q_auto,fl_sanitize,w_60,h_60/https://dashboard.snapcraft.io/site_media/appmedia/2020/11/Screenshot_2020-11-21_at_02.05.22.png",
        "name": "ansible-semaphore",
        "platform": "linux",
        "repository": {
          "stackfile": "Template/Stack/ansible-semaphore.yml",
          "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "Ansible-semaphore",
        "type": 3
      },
      {
        "categories": [
          "Files"
        ],
        "description": "A Dropbox-like file manager that let you manage your data anywhere it is located.",
        "logo": "https://downloads.filestash.app/brand/logo_white.svg",
        "name": "filestash",
        "platform": "linux",
        "repository": {
          "stackfile": "Template/Stack/filestash.yml",
          "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "Filestash",
        "type": 3
      },
      {
        "categories": [
          "Management"
        ],
        "description": "A fancy, easy-to-use and reactive self-hosted docker compose.yaml stack-oriented manager.",
        "logo": "https://github.com/louislam/dockge/raw/master/frontend/public/icon.svg",
        "name": "dockge",
        "platform": "linux",
        "repository": {
          "stackfile": "Template/Stack/dockge.yml",
          "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "Dockge",
        "type": 3
      },
      {
        "categories": [
          "Entertainment"
        ],
        "description": "Jellyseerr is a free and open source fork of Overseerr for managing requests for your media library. It integrates with your existing services, such as Sonarr, Radarr, and Jellyfin!",
        "logo": "https://raw.githubusercontent.com/Fallenbagel/jellyseerr/develop/public/logo_full.svg",
        "name": "jellyseer",
        "platform": "linux",
        "repository": {
          "stackfile": "Template/Stack/jellyseer.yml",
          "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "Jellyseer",
        "type": 3
      },
      {
        "type": 1,
        "title": "Registry (cache)",
        "description": "Docker image registry configured as a DockerHub pull through cache",
        "categories": [
          "Docker"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
        "image": "registry:latest",
        "ports": [
          "5000/tcp"
        ],
        "volumes": [
          {
            "container": "/var/lib/registry"
          }
        ],
        "env": [
          {
            "name": "REGISTRY_PROXY_REMOTEURL",
            "default": "https://registry-1.docker.io",
            "preset": true
          }
        ]
      },
      {
        "type": 1,
        "title": "Ubuntu",
        "description": "Debian-based Linux operating system",
        "categories": [
          "Operatingsystem"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
        "image": "ubuntu:latest",
        "interactive": true,
        "command": "/bin/bash"
      },
      {
        "type": 1,
        "title": "NodeJS",
        "description": "JavaScript-based platform for server-side and networking applications",
        "categories": [
          "Development"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
        "image": "node:latest",
        "interactive": true,
        "command": "/bin/bash"
      },
      {
        "type": 2,
        "title": "Swarm monitoring",
        "description": "Monitor your cluster performances with Prometheus & Grafana",
        "note": "Requires Docker version 19.03.0+. <b>Make sure to add the <code>monitoring == true</code> one of your Swarm manager node before deploying this stack.</b>",
        "categories": [
          "Monitoring"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
        "repository": {
          "url": "https://github.com/portainer/templates",
          "stackfile": "swarm/monitoring/docker-compose.yml"
        },
        "env": [
          {
            "name": "GRAFANA_USER",
            "label": "Grafana admin user",
            "default": "admin"
          },
          {
            "name": "GRAFANA_PASSWORD",
            "label": "Grafana admin password"
          }
        ]
      },
      {
        "type": 2,
        "title": "Redis Cluster",
        "description": "Open-source in-memory data structure store - Cluster mode",
        "categories": [
          "Database"
        ],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
        "repository": {
          "url": "https://github.com/portainer/templates",
          "stackfile": "stacks/redis-cluster/docker-stack.yaml"
        },
        "env": [
          {
            "name": "REDIS_PASSWD",
            "label": "Redis password"
          }
        ]
      }
    ]
  }
